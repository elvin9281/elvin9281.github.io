<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Garlic Notes</title><link>https://elvin9281.github.io/docs/linux/basic/</link><description>Recent content on Garlic Notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://elvin9281.github.io/docs/linux/basic/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://elvin9281.github.io/docs/linux/basic/commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://elvin9281.github.io/docs/linux/basic/commands/</guid><description>Commands # 紀錄常用的指令
tar for .tar.gz # 壓縮： tar zcvf FileName.tar.gz DirName 解壓縮： tar zxvf FileName.tar.gz screen # 開啟一個互動式的 Shell screen Detach 互動式的 Shell Crtl + A + d 列所有 互動式的 Shell(會列出 Session ID) screen -ls Attach 到互動式的 Shell screen -r screen -r + SessionID 結束 互動式的 Shell exit uname - Get Kernel Version # uname -a 4 : Kernel version 19 : Major revision 0 : Minor revision 17 : Patch level or number</description></item><item><title/><link>https://elvin9281.github.io/docs/linux/basic/redirect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://elvin9281.github.io/docs/linux/basic/redirect/</guid><description>Redirect # Shell 提供「可以取得任一執行中的程式，再更改 取得輸入 或 產生輸出 的方式，而 不必修改程式本身」
執行handywork，輸入是名為「data.in」的檔案，輸出到名為「result.out」的檔案 # handywork &amp;lt; data.in &amp;gt; result.out 把執行handywork的錯誤導到名為 err.msgs 的檔案 # 檔案描述符：stdin：0, stdout：1, stderr：2
handywork &amp;lt; data.in &amp;gt; result.out 2&amp;gt; err.msgs 把「錯誤訊息(stderr：2)」和「正常輸出(stdout：1)」導到名為 result.out 的檔案」(如果沒有1, 錯誤訊息就只會被寫進 一個名為1的檔案裡 ) # handywork &amp;lt; data.in &amp;gt; result.out 2&amp;gt;&amp;amp;1 or
handywork &amp;lt; data.in &amp;amp;&amp;gt; result.out Bash - 解釋「echo &amp;ldquo;hey&amp;rdquo; &amp;gt;&amp;amp;2」 # Ref: https://stackoverflow.com/questions/23489934/echo-2-some-text-what-does-it-mean-in-shell-scripting
Bash - 解釋 XXX &amp;gt; /dev/nell &amp;gt; 2&amp;gt;&amp;amp;1 # 將左邊程式的所有標準輸出 stdout, 及標準錯誤輸出 stderr 導向到 /dev/null, 即左邊的程式只會執行, 而不會輸出任何程式執行的結果</description></item><item><title/><link>https://elvin9281.github.io/docs/linux/basic/vim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://elvin9281.github.io/docs/linux/basic/vim/</guid><description>vim - Editor # 一般指令模式 (command mode) # 選取單字：v 整行：shift+v
複製選取後，按 y
貼上將剛剛複製的內容在想貼上的地方，按 p
刪除選取後，按 d
復原上一步按 u
重做上一步Ctrl + r
搜尋按 / ，若想繼續搜尋，按 n
移至檔尾（最後一行的第一個非空白字元處）按 G
移至檔首（第一行之第一個非空白字元處）按 gg
前往特定行數: + 行數
前往成對的括號 ([{}])、/* */按 %
PageUp 翻頁Ctrl+b
PageDown 翻頁Ctrl+f
多行註解在想加註解的最頂行 ctrl + v ，選到最底行 shift + i 加入要註解的字 ( e.</description></item></channel></rss>